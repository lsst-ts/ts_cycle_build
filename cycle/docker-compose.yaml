x-headerservice:
  &base-headerservice
  build:
    context: ../build/headerservice
    labels:
      com.description: "HeaderService deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      headerservice: ${headerservice}

x-oods:
  &base-oods
  build:
    context: ../build/oods
    labels:
      com.description: "OODS deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      oods: ${oods}

x-atoods:
  &base-atoods
  build:
    context: ../build/atoods
    labels:
      com.description: "ATOODS deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}

x-ccoods:
  &base-ccoods
  build:
    context: ../build/ccoods
    labels:
      com.description: "CCOODS deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}

x-mtoods:
  &base-mtoods
  build:
    context: ../build/mtoods
    labels:
      com.description: "MTOODS deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}

x-audio_broadcaster:
  &base-audio_broadcaster
  build:
    context: ../build/audio_broadcaster
    labels:
      com.description: "Audio broadcaster deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      ts_audio_broadcaster: ${ts_audio_broadcaster}

x-nightreport:
  &base-nightreport
  build:
    context: ../build/nightreport
    labels:
      com.description: "Nightreport REST API image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      ts_nightreport: ${ts_nightreport}

x-lsst_sims:
  &base-lsst_sims
  build:
    context: ../build/lsst_sims
    labels:
      com.description: "LSST sims image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      base_image_tag: ${CYCLE}
      lsst_sims: ${lsst_sims}

x-base-deploy-lsstsqre-private:
  &base-deploy-lsstsqre-private
  build:
    context: ../build/
    dockerfile: ./deploy-env/lsstsqre/Dockerfile
    labels:
      com.description: "Base deployment image for cycle ${CYCLE}${rev}."
    args:
      stack: ${stack}
      dds_community_version: ${dds_community_version}
      dds_community_build: ${dds_community_build_el8}
      dds_private_version: ${dds_private_version}
      dds_private_build: ${dds_private_build_el8}
      ts_utils: ${ts_utils}
      ts_salobj: ${ts_salobj}
      ts_dds: ${ts_dds_private}
      ts_idl: ${ts_idl}=${ts_xml}_${ts_sal}
      ts_ddsconfig: ${ts_ddsconfig}

x-dimm:
  &base-dimm
  build:
    context: ../build/dimm
    labels:
      com.description: "DIMM deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      dimm: ${ts_dimm}
      config: ${ts_config_ocs}

x-dsm:
  &base-dsm
  build:
    context: ../build/dsm
    labels:
      com.description: "DSM deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      dsm: ${ts_dsm}

x-love-commander:
  &base-love-commander
  build:
    context: ../build/love/commander
    labels:
      com.description: "LOVE commander for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      love_commander: ${love_commander}
      ts_observatory_control: ${ts_observatory_control}

x-love-frontend:
  &base-love-frontend
  build:
    context: ../build/love/frontend
    labels:
      com.description: "LOVE frontend for cycle/revision ${CYCLE}${rev}."
    args:
      love_frontend: ${love_frontend}

  x-love-frontend-k8s:
    &base-love-frontend-k8s
    build:
      context: ../build/love/frontend-k8s
      labels:
        com.description: "LOVE frontend kubernetes for cycle/revision ${CYCLE}${rev}."
      args:
        love_frontend: ${love_frontend}

x-love-manager:
  &base-love-manager
  build:
    context: ../build/love/manager
    labels:
      com.description: "LOVE manager for cycle/revision ${CYCLE}${rev}."
    args:
      love_manager: ${love_manager}

x-love-manager-static:
  &base-love-manager-static
  build:
    context: ../build/love/manager-static
    labels:
      com.description: "LOVE manager static for cycle/revision ${CYCLE}${rev}."
    args:
      love_manager: ${love_manager}

x-love-producer:
  &base-love-producer
  build:
    context: ../build/love/producer
    labels:
      com.description: "LOVE producer for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      love_producer: ${love_producer}

x-love-csc:
  &base-love-csc
  build:
    context: ../build/love/csc
    labels:
      com.description: "LOVE CSC for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      love_producer: ${love_producer}

x-love-view-backup:
  &base-love-view-backup
  build:
    context: ../build/love/view-backup
    labels:
      com.description: "LOVE view-backup for cycle/revision ${CYCLE}${rev}."
    args:
      UID: ${B_UID}
      GID: ${B_GID}

x-mtaos:
  &base-mtaos
  build:
    context: ../build/
    dockerfile: ./mtaos/Dockerfile
    labels:
      com.description: "MTAOS deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      ts_develop: ${ts_develop}
      phosim_utils: ${phosim_utils}
      ts_wep: ${ts_wep}
      ts_ofc: ${ts_ofc}
      mtaos: ${ts_mtaos}
      ts_config_mttcs: ${ts_config_mttcs}

x-mtdome:
  &base-mtdome
  build:
    context: ../build/mtdome
    labels:
      com.description: "MTDome component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      mtdome: ${ts_mtdome}
      config: ${ts_config_mttcs}

x-mtdometrajectory:
  &base-mtdometrajectory
  build:
    context: ../build/mtdometrajectory
    labels:
      com.description: "MTDomeTrajectory component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      mtdometrajectory: ${ts_mtdometrajectory}
      config: ${ts_config_mttcs}

x-mthexapod:
  &base-mthexapod
  build:
    context: ../build/mthexapod
    labels:
      com.description: "MTHexapod deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      mthexapod: ${ts_mthexapod}
      hexrotcomm: ${ts_hexrotcomm}
      tcpip: ${ts_tcpip}
      config: ${ts_config_mttcs}

x-mtm1m3_sim:
  &base-mtm1m3_sim
  build:
    context: ../build/
    dockerfile: ./mtm1m3_sim/Dockerfile
    labels:
      com.description: "M1M3 simulator deployment image for cycle/revision ${CYCLE}${rev}."
      sal: ${ts_sal}
      xml: ${ts_xml}
      m1m3: ${ts_m1m3support}
      crio_cpp: ${ts_cRIOcpp}
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      rpm: ${ts_xml}-${ts_sal}.el8.x86_64
      m1m3: ${ts_m1m3support}
      crio_cpp: ${ts_cRIOcpp}

x-mtaircompressor:
  &base-mtaircompressor
  build:
    context: ../build/mtaircompressor
    labels:
      com.description: "M1M3 & Camera air compressors on level 1 for cycle/revision ${CYCLE}/${rev}."
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      ts_mtaircompressor: ${ts_mtaircompressor}
      config: ${ts_config_mttcs}

x-lasertracker:
  &base-lasertracker
  build:
    context: ../build/lasertracker
    labels:
      com.description: "for cycle/revision ${CYCLE}/${rev}."
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      ts_lasertracker: ${ts_lasertracker}
      config: ${ts_config_mttcs}

x-mtm2_sim:
  &base-mtm2_sim
  build:
    context: ../build/mtm2_sim
    labels:
      com.description: "M2 simulator deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      m2: ${ts_m2}
      m2com: ${ts_m2com}
      config: v${ts_config_mttcs}

x-mtmount:
  &base-mtmount
  build:
    context: ../build/mtmount
    labels:
      com.description: "MTmount deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      mtmount: ${ts_mtmount}
      tcpip: ${ts_tcpip}
      config: v${ts_config_mttcs}

x-mtrotator:
  &base-mtrotator
  build:
    context: ../build/mtrotator
    labels:
      com.description: "MTRotator deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      mtrotator: ${ts_mtrotator}
      hexrotcomm: ${ts_hexrotcomm}
      tcpip: ${ts_tcpip}
      config: ${ts_config_mttcs}

x-ospl-daemon:
  &base-ospl-daemon
  build:
    context: ../build/ospl-daemon
    labels:
      com.description: "OSPL Daemon for cycle ${CYCLE}."
      deploy_env: ${deploy_env}
      deploy_tag: ${CYCLE}
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}

x-ptg:
  &base-ptg
  build:
    context: ../build/
    dockerfile: ./ptg/Dockerfile
    labels:
      com.description: "Pointing component deployment image for cycle/revision ${CYCLE}${rev}."
      rpm: 0:${ts_xml}-${ts_sal}.el8.x86_64
      ptg: ${ts_pointing_common}
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      rpm: 0:${ts_xml}-${ts_sal}.el8.x86_64
      ptg: ${ts_pointing_common}

x-base-rubintv:
  &base-rubintv
  build:
    context: ../build/rubintv/
    labels:
      com.description: "RubinTV frontend image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      rubintv: ${rubintv}

x-base-rapid-analysis:
  &base-rapid-analysis
  build:
    context: ../build/
    dockerfile: ./rapid-analysis/Dockerfile
    labels:
      com.description: "RubinTV Rapid Analysis image for cycle/revision ${CYCLE}${rev}."
    args:
      image_tag: 7-stack-lsst_distrib-${stack_ra}
      spectractor_work_branch: ${rubintv_spectractor}
      atmospec_work_branch: ${rubintv_atmospec}
      summit_utils_work_branch: ${rubintv_summit_utils}
      summit_extras_work_branch: ${rubintv_summit_extras}
      rubintv_production_work_branch: ${rubintv_production}

x-salkafka:
  &base-salkafka
  build:
    context: ../build/salkafka
    labels:
      com.description: "SAL kafka producers deployment image for cycle/revision ${CYCLE}${rev}."
      deploy_env: ${deploy_env}
      deploy_tag: ${CYCLE}
      salkafka: ${ts_salkafka}
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      salkafka: ${ts_salkafka}

x-scheduler:
  &base-scheduler
  build:
    context: ../build/scheduler
    labels:
      com.description: "Scheduler image for cycle/revision ${CYCLE}${rev}"
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      config: ${ts_config_ocs}
      ts_scheduler: ${ts_scheduler}
      ts_observatory_model: ${ts_observatory_model}
      ts_astrosky_model: ${ts_astrosky_model}
      ts_dateloc: ${ts_dateloc}
      ts_observing: ${ts_observing}
      ts_fbs_utils: ${ts_fbs_utils}
      rubin_sim: ${rubin_sim}
      lsst_efd_client: ${lsst_efd_client}

x-schedview:
  &base-schedview
  build:
    context: ../build/schedview
    labels:
      com.description: "Scheduler Visualization Bokeh App image for cycle/revision ${CYCLE}${rev}"
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      schedview: ${schedview}
      bokeh: ${bokeh}

x-scriptqueue:
  &base-scriptqueue
  build:
    context: ../build/
    dockerfile: ./scriptqueue/Dockerfile
    labels:
      com.description: "Script queue image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      deploy_tag: ${CYCLE}
      ts_config_attcs: ${ts_config_attcs}
      ts_config_ocs: ${ts_config_ocs}
      cwfs: ${cwfs}
      Spectractor: ${Spectractor}
      atmospec: ${atmospec}
      summit_utils: ${summit_utils}
      summit_extras: ${summit_extras}
      ts_utils: ${ts_utils}
      ts_observing_utilities: ${ts_observing_utilities}
      ts_observatory_control: ${ts_observatory_control}
      ts_externalscripts: ${ts_externalscripts}
      ts_standardscripts: ${ts_standardscripts}
      ts_criopy: ${ts_criopy}
      ts_scriptqueue: ${ts_scriptqueue}
      ts_idl: ${ts_idl}
      ts_atdome: ${ts_atdome}
      ts_atdometrajectory: ${ts_atdometrajectory}
      ts_atmcssimulator: ${ts_atmcssimulator}
      ts_develop: ${ts_develop}
      ts_wep: ${ts_wep}

x-test:
  &base-test
  build:
    context: ../build/test
    labels:
      com.description: "Test CSC for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}

x-watcher:
  &base-watcher
  build:
    context: ../build/watcher
    labels:
      com.description: "Watcher CSC for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      config_ocs: ${ts_config_ocs}
      watcher: ${ts_watcher}

x-weatherforecast:
  &base-weatherforecast
  build:
    context: ../build/weatherforecast
    labels:
      com.description: "Weather Forecast CSC for cycle/revision ${CYCLE}${rev}."
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      weatherforecast: ${ts_weatherforecast}
      config: ${ts_config_ocs}

x-weatherstation:
  &base-weatherstation
  build:
    context: ../build/weatherstation
    labels:
      com.description: "Weather Station CSC for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      config: ${ts_config_ocs}
      weatherstation: ${ts_weatherstation}

x-atmcs_sim:
  &base-atmcs_sim
  build:
    context: ../build/atmcs_sim
    labels:
      com.description: "ATMCS simulator for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atmcs: ${ts_atmcssimulator}

x-atmonochromator:
  &base-atmonochromator
  build:
    context: ../build/atmonochromator
    labels:
      com.description: "atmonochromator component for cycle ${CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atmonochromator: ${ts_atmonochromator}
      config: ${ts_config_atcalsys}

x-atdome:
  &base-atdome
  build:
    context: ../build/atdome
    labels:
      com.description: "ATDome component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atdome: ${ts_atdome}
      config: ${ts_config_attcs}

x-atdometrajectory:
  &base-atdometrajectory
  build:
    context: ../build/atdometrajectory
    labels:
      com.description: "ATDomeTrajectory component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atdometrajectory: ${ts_atdometrajectory}
      config: ${ts_config_attcs}

x-atpneumatics_sim:
  &base-atpneumatics_sim
  build:
    context: ../build/atpneumatics_sim
    labels:
      com.description: "ATPneumatics simulator for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atpneumatics_sim: ${ts_atpneumaticssimulator}

x-ataos:
  &base-ataos
  build:
    context: ../build/ataos
    labels:
      com.description: "ATAOS component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      ts_ataos: ${ts_ataos}
      config: ${ts_config_attcs}
      ts_observatory_control: ${ts_observatory_control}

x-athexapod:
  &base-athexapod
  build:
    context: ../build/athexapod
    labels:
      com.description: "ATHexapod component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      athexapod: ${ts_athexapod}
      config: ${ts_config_attcs}

x-atspectrograph:
  &base-atspectrograph
  build:
    context: ../build/atspectrograph
    labels:
      com.description: "ATSpectrograph component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atspec: ${ts_atspec}
      config: ${ts_config_latiss}

x-atwhitelight:
  &base-atwhitelight
  build:
    context: ../build/atwhitelight
    labels:
      com.description: "ATWhiteLight component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atwhitelight: ${ts_atwhitelight}
      labjack_ljm: ${labjack_ljm}
      config: ${ts_config_atcalsys}

x-authorize:
  &base-authorize
  build:
    context: ../build/authorize
    labels:
      com.description: "Authorize component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      authorize: ${ts_authorize}
      config: ${ts_config_ocs}

x-dmocps:
  &base-dmocps
  build:
    context: ../build/dmocps
    labels:
      com.description: "OCPS component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      dmocps: ${dm_OCPS}
      config: ${dm_config_ocps}

x-genericcamera:
  &base-genericcamera
  build:
    context: ../build/genericcamera/base
    labels:
      com.description: "GenericCamera component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      genericcamera: ${ts_genericcamera}
      config: ${ts_config_ocs}

x-genericcamera-canon:
  &base-genericcamera-canon
  build:
    context: ../build/genericcamera/canon
    labels:
      com.description: "Canon specific GenericCamera for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      gphoto2: ${gphoto2}

x-genericcamera-vimba:
  &base-genericcamera-vimba
  build:
    context: ../build/
    dockerfile: ./genericcamera/vimba/Dockerfile
    labels:
      com.description: "Vimba specific GenericCamera for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      vimba: ${vimba}
      vimba_conda_build: ${vimba_conda_build}

x-pmd:
  &base-pmd
  build:
    context: ../build/pmd
    labels:
      com.description: "PMD component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      pmd: ${ts_pmd}
      config: ${ts_config_ocs}
  devices:
    - /dev/ttyUSB0:/dev/ttyUSB0

x-integrationtests:
  &base-integrationtests
  build:
    context: ../build/integrationtests
    labels:
      com.description: "Integration tests for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      integrationtests: ${ts_integrationtests}
      robot_efd: ${robotframework_efd}

x-ess:
  &base-ess
  build:
    context: ../build/
    dockerfile: ./ess/Dockerfile
    labels:
      com.description: "ESS component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      ess: ${ts_ess_csc}
      common: ${ts_ess_common}
      config: ${ts_config_ocs}
      labjack: ${ts_ess_labjack}
      labjack_file_version: ${labjack_file_version}
      labjack_arch: ${labjack_arch}
      labjack_ljm: ${labjack_ljm}

x-ess-controller-aarch64:
  &base-controller-aarch64
  build:
    context: ../build/ess-controller
    labels:
      com.description: "ESS aarch64 Controller for cycle {$CYCLE}"
    args:
      hub: lsstts
      controller: ${ts_ess_controller}
      common: ${ts_ess_common}
      PYTHON_VERSION: ${PYTHON_VERSION}

x-hvac:
  &base-hvac
  build:
    context: ../build/hvac
    labels:
      com.description: "HVAC component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      hvac: ${ts_hvac}
      config: ${ts_config_ocs}

x-electrometer:
  &base-electrometer
  devices:
    - "/dev/ttyUSB0:/dev/electrometer"
  build:
    context: ../build/electrometer
    labels:
      com.description: "Electrometer component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      electrometer: ${ts_electrometer}
      utils: ${ts_utils}
      config: ${ts_config_ocs}

x-fiberspectrograph:
  &base-fiberspectrograph
  build:
    context: ../build/fiberspectrograph
    labels:
      com.description: "FiberSpectrograph component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      fiberspectrograph: ${ts_fiberspectrograph}
      config: ${ts_config_ocs}

x-gis:
  &base-gis
  build:
    context: ../build/gis
    labels:
      com.description: "GIS component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      gis: ${ts_gis}
      config: ${ts_config_ocs}

version: "3.7"

services:

  deploy-conda-community:
    image: lsstts/deploy-env:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/conda/Dockerfile
      labels:
        com.description: "Base deployment image for cycle/revision ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el8}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}
        ts_dds: ${ts_dds_community}
        ts_idl: ${ts_idl}
        PYTHON_VERSION: ${PYTHON_VERSION}

  deploy-conda-community-aarch64:
    image: lsstts/deploy-env-aarch64:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/conda-aarch64/Dockerfile
      labels:
        com.description: "Base aarch64 deployment image for cycle/revision ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}
        ts_dds: ${ts_dds_community}
        ts_idl: ${ts_idl}

  deploy-conda-private:
    image: ts-dockerhub.lsst.org/deploy-env:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/conda/Dockerfile
      labels:
        com.description: "Base deployment image for cycle ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el8}
        dds_private_version: ${dds_private_version}
        dds_private_build: ${dds_private_build_el8}
        ts_dds: ${ts_dds_private}=${ts_dds_private_conda_build}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_idl: ${ts_idl}=${ts_xml}_${ts_sal}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}
        PYTHON_VERSION: ${PYTHON_VERSION}

  deploy-lsstsqre-community:
    image: lsstts/deploy-sqre:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/lsstsqre/Dockerfile
      labels:
        com.description: "Base deployment image for cycle ${CYCLE}."
      args:
        stack: ${stack}
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el8}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}
        ts_dds: ${ts_dds_community}

  deploy-lsstsqre-private:
    image: ts-dockerhub.lsst.org/deploy-sqre:${CYCLE}${rev}
    <<: *base-deploy-lsstsqre-private

  deploy-lsstsqre-private_c:
    image: ts-dockerhub.lsst.org/deploy-sqre:${CYCLE}
    <<: *base-deploy-lsstsqre-private

  docker-compose-aarch64:
    image: lsstts/docker-compose-aarch64
    build:
      context: ../build/
      dockerfile: ./docker-compose-aarch64/Dockerfile
      labels:
        com.description: "docker-compose aarch64 image."

  base-sqre-community:
    image: lsstts/base-sqre:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./develop-env/lsstsqre/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base development for cycle/revision ${CYCLE}."
      args:
        stack: ${stack}
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el8}
        ts_develop: ${ts_develop}
        gphoto2: ${gphoto2}
        labjack_file_version: ${labjack_file_version}
        labjack_arch: ${labjack_arch}
        labjack_ljm: ${labjack_ljm}
        maven: ${maven}
        node: ${node}
        openjdk: ${openjdk}
        UID: ${B_UID}
        GID: ${B_GID}

  base-sqre-private:
    image: ts-dockerhub.lsst.org/base-sqre:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./develop-env/lsstsqre/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base development for cycle/revision ${CYCLE}."
      args:
        stack: ${stack}
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el8}
        dds_private_version: ${dds_private_version}
        dds_private_build: ${dds_private_build_el8}
        ts_develop: ${ts_develop}
        gphoto2: ${gphoto2}
        labjack_file_version: ${labjack_file_version}
        labjack_arch: ${labjack_arch}
        labjack_ljm: ${labjack_ljm}
        maven: ${maven}
        node: ${node}
        openjdk: ${openjdk}
        UID: ${B_UID}
        GID: ${B_GID}

  opensplice-lsstsqre-community:
    image: opensplice-lsstsqre:community
    build:
      context: ../build/
      dockerfile: ./opensplice/lsstsqre-community/Dockerfile
      args:
        image_tag: ${lsstsqre}
        java_v: ${java_v}
        osplice_v: ${dds_community_version}
        osplice_build: ${dds_community_build_el7}
        osplice_py: ${ts_dds_community_conda_build}

  opensplice-lsstsqre-licensed:
    image: opensplice-lsstsqre:licensed
    build:
      context: ../build/
      dockerfile: ./opensplice/lsstsqre-licensed/Dockerfile
      args:
        image_tag: ${lsstsqre}
        java_v: ${java_v}
        osplice_v: ${dds_private_version}
        osplice_build: ${dds_private_build_el7}
        osplice_py: ${ts_dds_private_conda_build}

  sal-sciplat-community:
    image: lsstts/sal-sciplat:${stack}_${CYCLE}${rev}
    build:
      context: ../build/
      dockerfile: ./sal-sciplat/Dockerfile
      args:
        image_tag: community
        black_v: ${black_v}
        ts_config_ocs: ${ts_config_ocs}
        ts_config_attcs: ${ts_config_attcs}
        ts_config_mtcalsys: ${ts_config_mtcalsys}
        ts_config_eas: ${ts_config_eas}
        ts_config_latiss: ${ts_config_latiss}
        ts_config_mttcs: ${ts_config_mttcs}
        ts_config_atcalsys: ${ts_config_atcalsys}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_xml: ${ts_xml}
        ts_idl: ${ts_idl}
        ts_utils: ${ts_utils}
        ts_sal: ${ts_sal}
        ts_salobj: ${ts_salobj}
        ts_criopy: ${ts_criopy}
        ts_observatory_control: ${ts_observatory_control}
        ts_standardscripts: ${ts_standardscripts}
        ts_externalscripts: ${ts_externalscripts}
        ts_atmcssimulator: ${ts_atmcssimulator}
        ts_atdome: ${ts_atdome}
        ts_atdometrajectory: ${ts_atdometrajectory}

  sal-sciplat-licensed:
    image: ts-dockerhub.lsst.org/sal-sciplat:${stack}_${CYCLE}${rev}
    build:
      context: ../build/
      dockerfile: ./sal-sciplat/Dockerfile
      args:
        image_tag: licensed
        black_v: ${black_v}
        ts_config_ocs: ${ts_config_ocs}
        ts_config_attcs: ${ts_config_attcs}
        ts_config_mtcalsys: ${ts_config_mtcalsys}
        ts_config_eas: ${ts_config_eas}
        ts_config_latiss: ${ts_config_latiss}
        ts_config_mttcs: ${ts_config_mttcs}
        ts_config_atcalsys: ${ts_config_atcalsys}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_xml: ${ts_xml}
        ts_idl: ${ts_idl}
        ts_utils: ${ts_utils}
        ts_sal: ${ts_sal}
        ts_criopy: ${ts_criopy}
        ts_salobj: ${ts_salobj}
        ts_observatory_control: ${ts_observatory_control}
        ts_standardscripts: ${ts_standardscripts}
        ts_externalscripts: ${ts_externalscripts}
        ts_atmcssimulator: ${ts_atmcssimulator}
        ts_atdome: ${ts_atdome}
        ts_atdometrajectory: ${ts_atdometrajectory}

  salobj-community:
    image: lsstts/salobj:${CYCLE}${rev}
    build:
      context: ../build/develop-env/salobj/
      network: ${build_network}
      labels:
        com.description: LSST Telescope and Site Docker image with SalObj for cycle/revision ${CYCLE}${rev}.
      args:
        hub: lsstts
        base_image_tag: ${CYCLE}
        ts_dds: ${ts_dds_community}=${ts_dds_community_conda_build}
        ts_config_ocs: ${ts_config_ocs}
        ts_config_attcs: ${ts_config_attcs}
        ts_config_mtcalsys: ${ts_config_mtcalsys}
        ts_config_eas: ${ts_config_eas}
        ts_config_latiss: ${ts_config_latiss}
        ts_config_mttcs: ${ts_config_mttcs}
        ts_config_atcalsys: ${ts_config_atcalsys}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_xml: ${ts_xml}
        ts_idl: ${ts_idl}
        ts_sal: ${ts_sal}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}

  salobj-private:
    image: ts-dockerhub.lsst.org/salobj:${CYCLE}${rev}
    build:
      context: ../build/develop-env/salobj/
      labels:
        com.description: LSST Telescope and Site Docker image with SalObj for cycle/revision ${CYCLE}${rev}.
      args:
        hub: ts-dockerhub.lsst.org
        base_image_tag: ${CYCLE}
        ts_dds: ${ts_dds_private}=${ts_dds_private_conda_build}
        ts_config_ocs: ${ts_config_ocs}
        ts_config_attcs: ${ts_config_attcs}
        ts_config_mtcalsys: ${ts_config_mtcalsys}
        ts_config_eas: ${ts_config_eas}
        ts_config_latiss: ${ts_config_latiss}
        ts_config_mttcs: ${ts_config_mttcs}
        ts_config_atcalsys: ${ts_config_atcalsys}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_xml: ${ts_xml}
        ts_idl: ${ts_idl}
        ts_sal: ${ts_sal}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}

  develop-env-community:
    image: lsstts/develop-env:${CYCLE}${rev}
    build:
      context: ../build/develop-env/develop-env/
      network: ${build_network}
      labels:
        com.description: LSST Telescope and Site development environment image for cycle/revision ${CYCLE}${rev}..
      args:
        hub: lsstts
        base_image_tag: ${CYCLE}${rev}
        ts_scriptqueue: ${ts_scriptqueue}
        ts_observatory_control: ${ts_observatory_control}
        ts_standardscripts: ${ts_standardscripts}
        ts_externalscripts: ${ts_externalscripts}
        ts_atmcssimulator: ${ts_atmcssimulator}
        ts_atdome: ${ts_atdome}
        ts_atdometrajectory: ${ts_atdometrajectory}
        ts_attcpip: ${ts_attcpip}
        ts_simactuators: ${ts_simactuators}
        ts_hexrotcomm: ${ts_hexrotcomm}
        ts_tcpip: ${ts_tcpip}
        ts_criopy: ${ts_criopy}

  develop-env-private:
    image: ts-dockerhub.lsst.org/develop-env:${CYCLE}${rev}
    build:
      context: ../build/develop-env/develop-env/
      network: ${build_network}
      labels:
        com.description: LSST Telescope and Site development environment image for cycle/revision ${CYCLE}${rev}..
      args:
        hub: ts-dockerhub.lsst.org
        base_image_tag: ${CYCLE}${rev}
        ts_scriptqueue: ${ts_scriptqueue}
        ts_observatory_control: ${ts_observatory_control}
        ts_standardscripts: ${ts_standardscripts}
        ts_externalscripts: ${ts_externalscripts}
        ts_atmcssimulator: ${ts_atmcssimulator}
        ts_atdome: ${ts_atdome}
        ts_atdometrajectory: ${ts_atdometrajectory}
        ts_attcpip: ${ts_attcpip}
        ts_simactuators: ${ts_simactuators}
        ts_hexrotcomm: ${ts_hexrotcomm}
        ts_tcpip: ${ts_tcpip}
        ts_criopy: ${ts_criopy}

  conda-builder-aarch64-community:
    image: lsstts/conda_package_builder_aarch64:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./conda_builder/aarch64/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base AlmaLinux 8 aarch64 image for cycle ${CYCLE} without OpenSpliceDDS."

  conda-builder-aarch64-private:
    image: ${hub}/conda_package_builder_aarch64:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./conda_builder/aarch64/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base AlmaLinux 8 aarch64 image for cycle ${CYCLE} without OpenSpliceDDS."

  conda-builder-community:
    image: lsstts/conda_package_builder:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./conda_builder/linux64/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base CentOS 7 linux64 image for cycle ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el8}
        labjack_file_version: ${labjack_file_version}
        labjack_arch: ${labjack_arch}
        labjack_ljm: ${labjack_ljm}

  conda-builder-private:
    image: ${hub}/conda_package_builder:${CYCLE}${rev}
    build:
      context: ../build/
      dockerfile: ./conda_builder/linux64/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base CentOS 7 linux64 image for cycle ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el8}
        dds_private_version: ${dds_private_version}
        dds_private_build: ${dds_private_build_el8}
        labjack_file_version: ${labjack_file_version}
        labjack_arch: ${labjack_arch}
        labjack_ljm: ${labjack_ljm}

  ospl-daemon:
    image: ${hub}/ospl-daemon:${CYCLE}
    <<: *base-ospl-daemon

  ospl-daemon_c:
    image: ${hub}/ospl-daemon:${CYCLE}
    <<: *base-ospl-daemon

  lsst_sims:
    image: ${hub}/lsst_sims:${CYCLE}${rev}
    <<: *base-lsst_sims

  lsst_sims_c:
    image: ${hub}/lsst_sims:${CYCLE}
    <<: *base-lsst_sims

  dimm:
    image: ${hub}/dimm:${CYCLE}${rev}
    <<: *base-dimm

  dimm_c:
    image: ${hub}/dimm:${CYCLE}
    <<: *base-dimm

  dsm:
    image: ${hub}/dsm:${CYCLE}${rev}
    <<: *base-dsm

  dsm_c:
    image: ${hub}/dsm:${CYCLE}
    <<: *base-dsm

  love-commander:
    image: ${hub}/love-commander:${CYCLE}${rev}
    <<: *base-love-commander

  love-commander_c:
    image: ${hub}/love-commander:${CYCLE}
    <<: *base-love-commander

  love-frontend-k8s:
    image: ${hub}/love-frontend-k8s:${CYCLE}${rev}
    <<: *base-love-frontend-k8s

  love-frontend-k8s_c:
    image: ${hub}/love-frontend-k8s:${CYCLE}
    <<: *base-love-frontend-k8s

  love-frontend:
    image: ${hub}/love-frontend:${CYCLE}${rev}
    <<: *base-love-frontend

  love-frontend_c:
    image: ${hub}/love-frontend:${CYCLE}
    <<: *base-love-frontend

  love-manager:
    image: ${hub}/love-manager:${CYCLE}${rev}
    <<: *base-love-manager

  love-manager_c:
    image: ${hub}/love-manager:${CYCLE}
    <<: *base-love-manager

  love-manager-static:
    image: ${hub}/love-manager-static:${CYCLE}${rev}
    <<: *base-love-manager-static

  love-manager-static_c:
    image: ${hub}/love-manager-static:${CYCLE}
    <<: *base-love-manager-static

  love-producer:
    image: ${hub}/love-producer:${CYCLE}${rev}
    <<: *base-love-producer

  love-producer_c:
    image: ${hub}/love-producer:${CYCLE}
    <<: *base-love-producer

  love-csc:
    image: ${hub}/love-csc:${CYCLE}${rev}
    <<: *base-love-csc

  love-csc_c:
    image: ${hub}/love-csc:${CYCLE}
    <<: *base-love-csc

  love-view-backup:
    image: ${hub}/love-view-backup:${CYCLE}${rev}
    <<: *base-love-view-backup

  love-view-backup_c:
    image: ${hub}/love-view-backup:${CYCLE}
    <<: *base-love-view-backup

  audio_broadcaster:
    image: ${hub}/audio_broadcaster:${CYCLE}${rev}
    <<: *base-audio_broadcaster

  audio_broadcaster_c:
    image: ${hub}/audio_broadcaster:${CYCLE}
    <<: *base-audio_broadcaster
  
  nightreport:
    image: ${hub}/nightreport:${CYCLE}${rev}
    <<: *base-nightreport
  
  nightreport_c:
    image: ${hub}/nightreport:${CYCLE}
    <<: *base-nightreport

  mtaos:
    image: ${hub}/mtaos:${CYCLE}${rev}
    <<: *base-mtaos

  mtaos_c:
    image: ${hub}/mtaos:${CYCLE}
    <<: *base-mtaos

  mtdome:
    image: ${hub}/mtdome:${CYCLE}${rev}
    <<: *base-mtdome

  mtdome_c:
    image: ${hub}/mtdome:${CYCLE}
    <<: *base-mtdome

  mtdometrajectory:
    image: ${hub}/mtdometrajectory:${CYCLE}${rev}
    <<: *base-mtdometrajectory

  mtdometrajectory_c:
    image: ${hub}/mtdometrajectory:${CYCLE}
    <<: *base-mtdometrajectory

  mthexapod:
    image: ${hub}/mthexapod:${CYCLE}${rev}
    <<: *base-mthexapod

  mthexapod_c:
    image: ${hub}/mthexapod:${CYCLE}
    <<: *base-mthexapod

  mtm1m3_sim:
    image: ${hub}/mtm1m3_sim:${CYCLE}${rev}
    <<: *base-mtm1m3_sim

  mtm1m3_sim_c:
    image: ${hub}/mtm1m3_sim:${CYCLE}
    <<: *base-mtm1m3_sim

  mtaircompressor:
    image: ${hub}/mtaircompressor:${CYCLE}${rev}
    <<: *base-mtaircompressor

  mtaircompressor_c:
    image: ${hub}/mtaircompressor:${CYCLE}
    <<: *base-mtaircompressor

  lasertracker:
    image: ${hub}/lasertracker:${CYCLE}${rev}
    <<: *base-lasertracker

  lasertracker_c:
    image: ${hub}/lasertracker:${CYCLE}
    <<: *base-lasertracker

  mtm2_sim:
    image: ${hub}/m2:${CYCLE}${rev}
    <<: *base-mtm2_sim

  mtm2_sim_c:
    image: ${hub}/m2:${CYCLE}
    <<: *base-mtm2_sim

  mtmount:
    image: ${hub}/mtmount:${CYCLE}${rev}
    <<: *base-mtmount

  mtmount_c:
    image: ${hub}/mtmount:${CYCLE}
    <<: *base-mtmount

  mtrotator:
    image: ${hub}/mtrotator:${CYCLE}${rev}
    <<: *base-mtrotator

  mtrotator_c:
    image: ${hub}/mtrotator:${CYCLE}
    <<: *base-mtrotator

  rubintv:
    image: ${hub}/rubintv:${CYCLE}${rev}
    <<: *base-rubintv

  rubintv_c:
    image: ${hub}/rubintv:${CYCLE}
    <<: *base-rubintv

  rapid-analysis:
    image: ${hub}/rapid-analysis:${CYCLE}${rev}
    <<: *base-rapid-analysis

  rapid-analysis_c:
    image: ${hub}/rapid-analysis:${CYCLE}
    <<: *base-rapid-analysis

  rapid-analysis-usdf:
    image: lsstts/rapid-analysis:${CYCLE}${rev}_usdf
    build:
      context: ../build/
      dockerfile: ./rapid-analysis/Dockerfile
      labels:
        com.description: "RubinTV Rapid Analysis image for cycle/revision ${CYCLE}${rev}."
      args:
        image_tag: ${lsstsqre}
        spectractor_work_branch: ${rubintv_spectractor}
        atmospec_work_branch: ${rubintv_atmospec}
        summit_utils_work_branch: ${rubintv_summit_utils}
        summit_extras_work_branch: ${rubintv_summit_extras}
        rubintv_production_work_branch: ${rubintv_production}
        UID: 15517
        GID: 4085

  rapid-analysis-usdf_c:
    image: lsstts/rapid-analysis:${CYCLE}_usdf
    build:
      context: ../build/
      dockerfile: ./rapid-analysis/Dockerfile
      labels:
        com.description: "RubinTV Rapid Analysis image for cycle/revision ${CYCLE}${rev}."
      args:
        image_tag: ${lsstsqre}
        spectractor_work_branch: ${rubintv_spectractor}
        atmospec_work_branch: ${rubintv_atmospec}
        summit_utils_work_branch: ${rubintv_summit_utils}
        summit_extras_work_branch: ${rubintv_summit_extras}
        rubintv_production_work_branch: ${rubintv_production}
        UID: 15517
        GID: 4085

  ptg:
    image: ts-dockerhub.lsst.org/ptkernel:${CYCLE}${rev}
    <<: *base-ptg

  ptg_c:
    image: ts-dockerhub.lsst.org/ptkernel:${CYCLE}
    <<: *base-ptg

  salkafka:
    image: ${hub}/salkafka:${CYCLE}${rev}
    <<: *base-salkafka

  salkafka_c:
    image: ${hub}/salkafka:${CYCLE}
    <<: *base-salkafka

  scheduler:
    image: ${hub}/scheduler:${CYCLE}${rev}
    <<: *base-scheduler

  scheduler_c:
    image: ${hub}/scheduler:${CYCLE}
    <<: *base-scheduler

  schedview:
    image: ${hub}/schedview:${CYCLE}${rev}
    <<: *base-schedview

  schedview_c:
    image: ${hub}/schedview:${CYCLE}
    <<: *base-schedview

  scriptqueue:
    image: ${hub}/scriptqueue:${CYCLE}${rev}
    <<: *base-scriptqueue

  scriptqueue_c:
    image: ${hub}/scriptqueue:${CYCLE}
    <<: *base-scriptqueue

  test:
    image: ${hub}/test:${CYCLE}${rev}
    <<: *base-test

  test_c:
    image: ${hub}/test:${CYCLE}
    <<: *base-test

  watcher:
    image: ${hub}/watcher:${CYCLE}${rev}
    <<: *base-watcher

  watcher_c:
    image: ${hub}/watcher:${CYCLE}
    <<: *base-watcher

  weatherforecast:
    image: ${hub}/weatherforecast:${CYCLE}${rev}
    <<: *base-weatherforecast

  weatherforecast_c:
    image: ${hub}/weatherforecast:${CYCLE}
    <<: *base-weatherforecast

  weatherstation:
    image: ${hub}/weatherstation:${CYCLE}${rev}
    <<: *base-weatherstation

  weatherstation_c:
    image: ${hub}/weatherstation:${CYCLE}
    <<: *base-weatherstation

  atmcs_sim:
    image: ${hub}/atmcs_sim:${CYCLE}${rev}
    <<: *base-atmcs_sim

  atmcs_sim_c:
    image: ${hub}/atmcs_sim:${CYCLE}
    <<: *base-atmcs_sim

  atmonochromator:
    image: ${hub}/atmonochromator:${CYCLE}${rev}
    <<: *base-atmonochromator

  atmonochromator_c:
    image: ${hub}/atmonochromator:${CYCLE}
    <<: *base-atmonochromator

  atdome:
    image: ${hub}/atdome:${CYCLE}${rev}
    <<: *base-atdome

  atdome_c:
    image: ${hub}/atdome:${CYCLE}
    <<: *base-atdome

  atdometrajectory:
    image: ${hub}/atdometrajectory:${CYCLE}${rev}
    <<: *base-atdometrajectory

  atdometrajectory_c:
    image: ${hub}/atdometrajectory:${CYCLE}
    <<: *base-atdometrajectory

  atpneumatics_sim:
    image: ${hub}/at_pneumatics_sim:${CYCLE}${rev}
    <<: *base-atpneumatics_sim

  atpneumatics_sim_c:
    image: ${hub}/at_pneumatics_sim:${CYCLE}
    <<: *base-atpneumatics_sim

  ataos:
    image: ${hub}/ataos:${CYCLE}${rev}
    <<: *base-ataos

  ataos_c:
    image: ${hub}/ataos:${CYCLE}
    <<: *base-ataos

  athexapod:
    image: ${hub}/athexapod:${CYCLE}${rev}
    <<: *base-athexapod

  athexapod_c:
    image: ${hub}/athexapod:${CYCLE}
    <<: *base-athexapod

  atspectrograph:
    image: ${hub}/atspec:${CYCLE}${rev}
    <<: *base-atspectrograph

  atspectrograph_c:
    image: ${hub}/atspec:${CYCLE}
    <<: *base-atspectrograph

  atwhitelight:
    image: ${hub}/atwhitelight:${CYCLE}${rev}
    <<: *base-atwhitelight

  atwhitelight_c:
    image: ${hub}/atwhitelight:${CYCLE}
    <<: *base-atwhitelight

  authorize:
    image: ${hub}/authorize:${CYCLE}${rev}
    <<: *base-authorize

  authorize_c:
    image: ${hub}/authorize:${CYCLE}
    <<: *base-authorize

  dmocps:
    image: ${hub}/dmocps:${CYCLE}${rev}
    <<: *base-dmocps

  dmocps_c:
    image: ${hub}/dmocps:${CYCLE}
    <<: *base-dmocps

  genericcamera:
    image: ${hub}/genericcamera:${CYCLE}${rev}
    <<: *base-genericcamera

  genericcamera_c:
    image: ${hub}/genericcamera:${CYCLE}
    <<: *base-genericcamera

  genericcamera-canon:
    image: ${hub}/genericcamera-canon:${CYCLE}${rev}
    <<: *base-genericcamera-canon

  genericcamera-canon_c:
    image: ${hub}/genericcamera-canon:${CYCLE}
    <<: *base-genericcamera-canon

  genericcamera-vimba:
    image: ${hub}/genericcamera-vimba:${CYCLE}${rev}
    <<: *base-genericcamera-vimba

  genericcamera-vimba_c:
    image: ${hub}/genericcamera-vimba:${CYCLE}
    <<: *base-genericcamera-vimba

  pmd:
    image: ${hub}/pmd:${CYCLE}${rev}
    <<: *base-pmd

  pmd_c:
    image: ${hub}/pmd:${CYCLE}
    <<: *base-pmd

  integrationtests:
    image: ${hub}/integrationtests:${CYCLE}${rev}
    <<: *base-integrationtests

  integrationtests_c:
    image: ${hub}/integrationtests:${CYCLE}
    <<: *base-integrationtests

  ess:
    image: ${hub}/ess:${CYCLE}${rev}
    <<: *base-ess

  ess_c:
    image: ${hub}/ess:${CYCLE}
    <<: *base-ess

  ess-controller-aarch64:
    image: lsstts/ess-controller-aarch64
    <<: *base-controller-aarch64

  hvac:
    image: ${hub}/hvac:${CYCLE}${rev}
    <<: *base-hvac

  hvac_c:
    image: ${hub}/hvac:${CYCLE}
    <<: *base-hvac

  electrometer:
    image: ${hub}/electrometer:${CYCLE}${rev}
    <<: *base-electrometer

  electrometer_c:
    image: ${hub}/electrometer:${CYCLE}
    <<: *base-electrometer

  fiberspectrograph:
    image: ${hub}/fiberspectrograph:${CYCLE}${rev}
    <<: *base-fiberspectrograph

  fiberspectrograph_c:
    image: ${hub}/fiberspectrograph:${CYCLE}
    <<: *base-fiberspectrograph

  gis:
    image: ${hub}/gis:${CYCLE}${rev}
    <<: *base-gis

  gis_c:
    image: ${hub}/gis:${CYCLE}
    <<: *base-gis

  oods:
    image: ${hub}/oods:${CYCLE}${rev}
    <<: *base-oods

  oods_c:
    image: ${hub}/oods:${CYCLE}
    <<: *base-oods

  atoods:
    image: ${hub}/atoods:${CYCLE}${rev}
    <<: *base-atoods

  atoods_c:
    image: ${hub}/atoods:${CYCLE}
    <<: *base-atoods

  ccoods:
    image: ${hub}/ccoods:${CYCLE}${rev}
    <<: *base-ccoods

  ccoods_c:
    image: ${hub}/ccoods:${CYCLE}
    <<: *base-ccoods

  mtoods:
    image: ${hub}/mtoods:${CYCLE}${rev}
    <<: *base-mtoods

  mtoods_c:
    image: ${hub}/mtoods:${CYCLE}
    <<: *base-mtoods

  headerservice:
    image: ${hub}/headerservice:${CYCLE}${rev}
    <<: *base-headerservice

  headerservice_c:
    image: ${hub}/headerservice:${CYCLE}
    <<: *base-headerservice
