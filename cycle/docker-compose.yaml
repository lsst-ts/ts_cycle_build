x-lsst_sims: &base-lsst_sims
  build:
    context: ../build/lsst_sims
    labels:
      com.description: "LSST sims image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      base_image_tag: ${CYCLE}
      lsst_sims: ${lsst_sims}

x-adam-sensors: &base-adam-sensors
  build:
    context: ../build/adam-sensors
    labels:
      com.description: "Adam Sensors CSC deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      ts_adamSensors: ${ts_adamSensors}
      config: ${ts_config_eas}

x-dimm: &base-dimm
  build:
    context: ../build/dimm
    labels:
      com.description: "DIMM deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      dimm: ${ts_dimm}
      config: ${ts_config_ocs}

x-dsm: &base-dsm
  build:
    context: ../build/dsm
    labels:
      com.description: "DSM deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      dsm: ${ts_dsm}

x-love-commander: &base-love-commander
  build:
    context: ../build/love/commander
    labels:
      com.description: "LOVE commander for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      love_commander: ${love_commander}

x-love-frontend: &base-love-frontend
  build:
    context: ../build/love/frontend
    labels:
      com.description: "LOVE frontend for cycle/revision ${CYCLE}${rev}."
    args:
      love_frontend: ${love_frontend}

x-love-manager: &base-love-manager
  build:
    context: ../build/love/manager
    labels:
      com.description: "LOVE manager for cycle/revision ${CYCLE}${rev}."
    args:
      love_manager: ${love_manager}

x-love-manager-static: &base-love-manager-static
  build:
    context: ../build/love/manager-static
    labels:
      com.description: "LOVE manager static for cycle/revision ${CYCLE}${rev}."
    args:
      love_manager: ${love_manager}

x-love-producer: &base-love-producer
  build:
    context: ../build/love/producer
    labels:
      com.description: "LOVE producer for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      love_producer: ${love_producer}

x-love-csc: &base-love-csc
  build:
    context: ../build/love/csc
    labels:
      com.description: "LOVE CSC for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      love_producer: ${love_producer}

x-mtaos: &base-mtaos
  build:
    context: ../build/
    dockerfile: ./mtaos/Dockerfile
    labels:
      com.description: "MTAOS deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      ts_conda_build: ${ts_conda_build}
      phosim_utils: ${phosim_utils}
      ts_wep: ${ts_wep}
      ts_ofc: ${ts_ofc}
      mtaos: ${ts_mtaos}
      ts_config_mttcs: ${ts_config_mttcs}

x-mtdome: &base-mtdome
  build:
    context: ../build/mtdome
    labels:
      com.description: "MTDome component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      mtdome: ${ts_mtdome}
      config: ${ts_config_mttcs}

x-mtdometrajectory: &base-mtdometrajectory
  build:
    context: ../build/mtdometrajectory
    labels:
      com.description: "MTDomeTrajectory component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      mtdometrajectory: ${ts_mtdometrajectory}
      config: ${ts_config_mttcs}

x-mthexapod: &base-mthexapod
  build:
    context: ../build/mthexapod
    labels:
      com.description: "MTHexapod deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      mthexapod: ${ts_mthexapod}
      hexrotcomm: ${ts_hexrotcomm}
      tcpip: ${ts_tcpip}
      config: ${ts_config_mttcs}

x-mtm1m3_sim: &base-mtm1m3_sim
  build:
    context: ../build/
    dockerfile: ./mtm1m3_sim/Dockerfile
    labels:
      com.description: "M1M3 simulator deployment image for cycle/revision ${CYCLE}${rev}."
      sal: ${ts_sal}
      xml: ${ts_xml}
      m1m3: ${ts_m1m3support}
      crio_cpp: ${ts_cRIOcpp}
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      rpm: ${ts_xml}-${ts_sal}.el7.x86_64
      m1m3: ${ts_m1m3support}
      crio_cpp: ${ts_cRIOcpp}

x-mtm2_sim: &base-mtm2_sim
  build:
    context: ../build/mtm2_sim
    labels:
      com.description: "M2 simulator deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      m2: ${ts_m2}
      config: v${ts_config_mttcs}

x-mtmount: &base-mtmount
  build:
    context: ../build/mtmount
    labels:
      com.description: "MTmount deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      mtmount: ${ts_mtmount}
      tcpip: ${ts_tcpip}
      config: v${ts_config_mttcs}

x-mtrotator: &base-mtrotator
  build:
    context: ../build/mtrotator
    labels:
      com.description: "MTRotator deployment image for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      mtrotator: ${ts_mtrotator}
      hexrotcomm: ${ts_hexrotcomm}
      tcpip: ${ts_tcpip}
      config: ${ts_config_mttcs}

x-ospl-daemon: &base-ospl-daemon
  build:
    context: ../build/ospl-daemon
    labels:
      com.description: "OSPL Daemon for cycle ${CYCLE}."
      deploy_env: ${deploy_env}
      deploy_tag: ${CYCLE}
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}

x-ptg: &base-ptg
  build:
    context: ../build/
    dockerfile: ./ptg/Dockerfile
    labels:
      com.description: "Pointing component deployment image for cycle/revision ${CYCLE}${rev}."
      rpm: 0:${ts_xml}-${ts_sal}.el7.x86_64
      ptg: ${ts_pointing_common}
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      rpm: 0:${ts_xml}-${ts_sal}.el7.x86_64
      ptg: ${ts_pointing_common}

x-base-rubintv-broadcaster: &base-rubintv-broadcaster
  build:
    context: ../build/
    dockerfile: ./rubintv-broadcaster/Dockerfile
    labels:
      com.description: "RubinTV broadcaster image for cycle/revision ${CYCLE}${rev}."
    args:
      image_tag: ${lsstsqre}
      spectractor_work_branch: ${Spectractor}
      atmospec_work_branch: ${atmospec}
      rapid_analysis_work_branch: ${rapid_analysis}

x-salkafka: &base-salkafka
  build:
    context: ../build/salkafka
    labels:
      com.description: "SAL kafka producers deployment image for cycle/revision ${CYCLE}${rev}."
      deploy_env: ${deploy_env}
      deploy_tag: ${CYCLE}
      salkafka: ${ts_salkafka}
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      salkafka: ${ts_salkafka}

x-scheduler: &base-scheduler
  build:
    context: ../build/scheduler
    labels:
      com.description: "Scheduler image for cycle/revision ${CYCLE}${rev}"
    args:
      hub: ${hub}
      cycle: ${CYCLE}
      config: ${ts_config_ocs}
      ts_scheduler: ${ts_scheduler}
      ts_observatory_model: ${ts_observatory_model}
      ts_astrosky_model: ${ts_astrosky_model}
      ts_dateloc: ${ts_dateloc}
      rubin_sim: ${rubin_sim}

x-scriptqueue: &base-scriptqueue
  build:
    context: ../build/
    dockerfile: ./scriptqueue/Dockerfile
    labels:
      com.description: "Script queue image for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      deploy_tag: ${CYCLE}
      ts_config_attcs: ${ts_config_attcs}
      ts_config_ocs: ${ts_config_ocs}
      cwfs: ${cwfs}
      Spectractor: ${Spectractor}
      obs_base: ${obs_base}
      pipe_tasks: ${pipe_tasks}
      rapid_analysis: ${rapid_analysis}
      atmospec: ${atmospec}
      ts_observing_utilities: ${ts_observing_utilities}
      ts_observatory_control: ${ts_observatory_control}
      ts_externalscripts: ${ts_externalscripts}
      ts_standardscripts: ${ts_standardscripts}
      ts_scriptqueue: ${ts_scriptqueue}
      ts_idl: ${ts_idl}
      ts_atdome: ${ts_ATDome}
      ts_atdometrajectory: ${ts_ATDomeTrajectory}
      ts_atmcssimulator: ${ts_ATMCSSimulator}
      ts_conda_build: ${ts_conda_build}

x-test: &base-test
  build:
    context: ../build/test
    labels:
      com.description: "Test CSC for cycle/revision ${CYCLE}${rev}."
    args:
      hub: ${hub}
      cycle: ${CYCLE}

x-watcher: &base-watcher
  build:
    context: ../build/watcher
    labels:
      com.description: "Watcher CSC for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      config_ocs: ${ts_config_ocs}
      watcher: ${ts_watcher}

x-weatherstation: &base-weatherstation
  build:
    context: ../build/weatherstation
    labels:
      com.description: "Weather Station CSC for cycle/revision ${CYCLE}${rev}."
    args:
      deploy_env: ${hub}/${deploy_env}
      deploy_tag: ${CYCLE}
      config: ${ts_config_ocs}
      weatherstation: ${ts_weatherstation}

x-atmcs_sim: &base-atmcs_sim
  build:
    context: ../build/atmcs_sim
    labels:
      com.description: "ATMCS simulator for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atmcs: ${ts_ATMCSSimulator}

x-atdome: &base-atdome
  build:
    context: ../build/atdome
    labels:
      com.description: "ATDome component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atdome: ${ts_ATDome}
      config: ${ts_config_attcs}

x-atdometrajectory: &base-atdometrajectory
  build:
    context: ../build/atdometrajectory
    labels:
      com.description: "ATDomeTrajectory component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atdometrajectory: ${ts_ATDomeTrajectory}
      config: ${ts_config_attcs}

x-atpneumatics_sim: &base-atpneumatics_sim
  build:
    context: ../build/atpneumatics_sim
    labels:
      com.description: "ATPneumatics simulator for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atpneumatics_sim: ${ts_ATPneumaticsSimulator}

x-ataos: &base-ataos
  build:
    context: ../build/ataos
    dockerfile: ./Dockerfile.conda
    labels:
      com.description: "ATAOS component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      ts_ataos: ${ts_ataos}
      config: ${ts_config_attcs}
      ts_observatory_control: ${ts_observatory_control}

x-athexapod: &base-athexapod
  build:
    context: ../build/athexapod
    labels:
      com.description: "ATHexapod component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      athexapod: ${ts_athexapod}
      config: ${ts_config_attcs}

x-atspectrograph: &base-atspectrograph
  build:
    context: ../build/atspectrograph
    labels:
      com.description: "ATSpectrograph component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      atspec: ${ts_atspec}
      config: ${ts_config_latiss}

x-dmocps: &base-dmocps
  build:
    context: ../build/dmocps
    labels:
      com.description: "OCPS component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      dmocps: ${dm_OCPS}
      config: ${dm_config_ocps}

x-genericcamera: &base-genericcamera
  build:
    context: ../build/genericcamera
    labels:
      com.description: "GenericCamera component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      genericcamera: ${ts_GenericCamera}
      config: ${ts_config_ocs}
      gphoto2: ${gphoto2}

x-pmd: &base-pmd
  build:
    context: ../build/pmd
    labels:
      com.description: "PMD component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      pmd: ${ts_pmd}
      config: ${ts_config_ocs}
  devices:
    - /dev/ttyUSB0:/dev/ttyUSB0

x-ess: &base-ess
  build:
    context: ../build/ess
    labels:
      com.description: "ESS component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      ess: ${ts_ess_csc}
      common: ${ts_ess_common}
      config: ${ts_config_ocs}

x-hvac: &base-hvac
  build:
    context: ../build/hvac
    labels:
      com.description: "HVAC component for cycle {$CYCLE}"
    args:
      cycle: ${CYCLE}
      hub: ${hub}
      hvac: ${ts_hvac}
      config: ${ts_config_ocs}



version: "3.7"

services:

  deploy-conda-community:
    image: lsstts/deploy-env:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/conda/Dockerfile
      labels:
        com.description: "Base deployment image for cycle/revision ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el7}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}
        ts_dds: ${ts_dds_community}
        ts_idl: ${ts_idl}

  deploy-conda-community-aarch64:
    image: lsstts/deploy-env-aarch64:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/conda-aarch64/Dockerfile
      labels:
        com.description: "Base aarch64 deployment image for cycle/revision ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}
        ts_dds: ${ts_dds_community}
        ts_idl: ${ts_idl}

  deploy-conda-private:
    image: ts-dockerhub.lsst.org/deploy-env:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/conda/Dockerfile
      labels:
        com.description: "Base deployment image for cycle ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el7}
        dds_private_version: ${dds_private_version}
        dds_private_build: ${dds_private_build}
        ts_dds: ${ts_dds_private}=${ts_dds_private_conda_build}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_idl: ${ts_idl}_${ts_xml}_${ts_sal}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}

  deploy-lsstsqre-community:
    image: lsstts/deploy-sqre:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/lsstsqre/Dockerfile
      labels:
        com.description: "Base deployment image for cycle ${CYCLE}."
      args:
        image_tag: ${lsstsqre}
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el7}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}
        ts_dds: ${ts_dds_community}

  deploy-lsstsqre-private:
    image: ts-dockerhub.lsst.org/deploy-sqre:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./deploy-env/lsstsqre/Dockerfile
      labels:
        com.description: "Base deployment image for cycle ${CYCLE}."
      args:
        image_tag: ${lsstsqre}
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el7}
        dds_private_version: ${dds_private_version}
        dds_private_build: ${dds_private_build}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}
        ts_dds: ${ts_dds_private}
        ts_idl: ${ts_idl}_${ts_xml}_${ts_sal}
        ts_ddsconfig: ${ts_ddsconfig}

  base-sqre-community:
    image: lsstts/base-sqre:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./develop-env/lsstsqre/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base development for cycle/revision ${CYCLE}."
      args:
        image_tag: ${lsstsqre}
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build}
        ts_develop: ${ts_develop}
        gphoto2: ${gphoto2}
        UID: ${B_UID}
        GID: ${B_GID}

  base-sqre-private:
    image: ts-dockerhub.lsst.org/base-sqre:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./develop-env/lsstsqre/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base development for cycle/revision ${CYCLE}."
      args:
        image_tag: ${lsstsqre}
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build}
        dds_private_version: ${dds_private_version}
        dds_private_build: ${dds_private_build}
        ts_develop: ${ts_develop}
        gphoto2: ${gphoto2}
        UID: ${B_UID}
        GID: ${B_GID}

  opensplice-lsstsqre-community:
    image: opensplice-lsstsqre:community
    build:
      context: ../build/
      dockerfile: ./opensplice/lsstsqre-community/Dockerfile
      args:
        image_tag: ${lsstsqre}
        java_v: ${java_v}
        osplice_v: ${dds_community_version}
        osplice_build: ${dds_community_build}
        osplice_py: ${ts_dds_community_conda_build}

  opensplice-lsstsqre-licensed:
    image: opensplice-lsstsqre:licensed
    build:
      context: ../build/
      dockerfile: ./opensplice/lsstsqre-licensed/Dockerfile
      args:
        image_tag: ${lsstsqre}
        java_v: ${java_v}
        osplice_v: ${dds_private_version}
        osplice_build: ${dds_private_build}
        osplice_py: ${ts_dds_private_conda_build}

  sal-sciplat-community:
    image: lsstts/sal-sciplat:${stack}_${CYCLE}${rev}
    build:
      context: ../build/
      dockerfile: ./sal-sciplat/Dockerfile
      args:
        image_tag: community
        black_v: ${black_v}
        ts_config_ocs: ${ts_config_ocs}
        ts_config_attcs: ${ts_config_attcs}
        ts_config_mtcalsys: ${ts_config_mtcalsys}
        ts_config_eas: ${ts_config_eas}
        ts_config_latiss: ${ts_config_latiss}
        ts_config_mttcs: ${ts_config_mttcs}
        ts_config_atcalsys: ${ts_config_atcalsys}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_xml: ${ts_xml}
        ts_idl: ${ts_idl}
        ts_utils: ${ts_utils}
        ts_sal: ${ts_sal}
        ts_salobj: ${ts_salobj}
        ts_observatory_control: ${ts_observatory_control}
        ts_standardscripts: ${ts_standardscripts}
        ts_externalscripts: ${ts_externalscripts}
        ts_atmcssimulator: ${ts_ATMCSSimulator}
        ts_atdome: ${ts_ATDome}
        ts_atdometrajectory: ${ts_ATDomeTrajectory}

  sal-sciplat-licensed:
    image: ts-dockerhub.lsst.org/sal-sciplat:${stack}_${CYCLE}${rev}
    build:
      context: ../build/
      dockerfile: ./sal-sciplat/Dockerfile
      args:
        image_tag: licensed
        black_v: ${black_v}
        ts_config_ocs: ${ts_config_ocs}
        ts_config_attcs: ${ts_config_attcs}
        ts_config_mtcalsys: ${ts_config_mtcalsys}
        ts_config_eas: ${ts_config_eas}
        ts_config_latiss: ${ts_config_latiss}
        ts_config_mttcs: ${ts_config_mttcs}
        ts_config_atcalsys: ${ts_config_atcalsys}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_xml: ${ts_xml}
        ts_idl: ${ts_idl}
        ts_utils: ${ts_utils}
        ts_sal: ${ts_sal}
        ts_salobj: ${ts_salobj}
        ts_observatory_control: ${ts_observatory_control}
        ts_standardscripts: ${ts_standardscripts}
        ts_externalscripts: ${ts_externalscripts}
        ts_atmcssimulator: ${ts_ATMCSSimulator}
        ts_atdome: ${ts_ATDome}
        ts_atdometrajectory: ${ts_ATDomeTrajectory}

  salobj-community:
    image: lsstts/salobj:${CYCLE}${rev}
    build:
      context: ../build/develop-env/salobj/
      network: ${build_network}
      labels:
        com.description: LSST Telescope and Site Docker image with SalObj for cycle/revision ${CYCLE}${rev}.
      args:
        hub: lsstts
        base_image_tag: ${CYCLE}
        ts_dds: ${ts_dds_community}=${ts_dds_community_conda_build}
        ts_config_ocs: ${ts_config_ocs}
        ts_config_attcs: ${ts_config_attcs}
        ts_config_mtcalsys: ${ts_config_mtcalsys}
        ts_config_eas: ${ts_config_eas}
        ts_config_latiss: ${ts_config_latiss}
        ts_config_mttcs: ${ts_config_mttcs}
        ts_config_atcalsys: ${ts_config_atcalsys}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_xml: ${ts_xml}
        ts_idl: ${ts_idl}
        ts_sal: ${ts_sal}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}

  salobj-private:
    image: ts-dockerhub.lsst.org/salobj:${CYCLE}${rev}
    build:
      context: ../build/develop-env/salobj/
      labels:
        com.description: LSST Telescope and Site Docker image with SalObj for cycle/revision ${CYCLE}${rev}.
      args:
        hub: ts-dockerhub.lsst.org
        base_image_tag: ${CYCLE}
        ts_dds: ${ts_dds_private}=${ts_dds_private_conda_build}
        ts_config_ocs: ${ts_config_ocs}
        ts_config_attcs: ${ts_config_attcs}
        ts_config_mtcalsys: ${ts_config_mtcalsys}
        ts_config_eas: ${ts_config_eas}
        ts_config_latiss: ${ts_config_latiss}
        ts_config_mttcs: ${ts_config_mttcs}
        ts_config_atcalsys: ${ts_config_atcalsys}
        ts_ddsconfig: ${ts_ddsconfig}
        ts_xml: ${ts_xml}
        ts_idl: ${ts_idl}
        ts_sal: ${ts_sal}
        ts_utils: ${ts_utils}
        ts_salobj: ${ts_salobj}

  develop-env-community:
    image: lsstts/develop-env:${CYCLE}${rev}
    build:
      context: ../build/develop-env/develop-env/
      network: ${build_network}
      labels:
        com.description: LSST Telescope and Site development environment image for cycle/revision ${CYCLE}${rev}..
      args:
        hub: lsstts
        base_image_tag: ${CYCLE}${rev}
        ts_scriptqueue: ${ts_scriptqueue}
        ts_observatory_control: ${ts_observatory_control}
        ts_standardscripts: ${ts_standardscripts}
        ts_externalscripts: ${ts_externalscripts}
        ts_ATMCSSimulator: ${ts_ATMCSSimulator}
        ts_ATDome: ${ts_ATDome}
        ts_ATDomeTrajectory: ${ts_ATDomeTrajectory}
        ts_simactuators: ${ts_simactuators}
        ts_hexrotcomm: ${ts_hexrotcomm}
        ts_tcpip: ${ts_tcpip}

  develop-env-private:
    image: ts-dockerhub.lsst.org/develop-env:${CYCLE}${rev}
    build:
      context: ../build/develop-env/develop-env/
      network: ${build_network}
      labels:
        com.description: LSST Telescope and Site development environment image for cycle/revision ${CYCLE}${rev}..
      args:
        hub: ts-dockerhub.lsst.org
        base_image_tag: ${CYCLE}${rev}
        ts_scriptqueue: ${ts_scriptqueue}
        ts_observatory_control: ${ts_observatory_control}
        ts_standardscripts: ${ts_standardscripts}
        ts_externalscripts: ${ts_externalscripts}
        ts_ATMCSSimulator: ${ts_ATMCSSimulator}
        ts_ATDome: ${ts_ATDome}
        ts_ATDomeTrajectory: ${ts_ATDomeTrajectory}
        ts_simactuators: ${ts_simactuators}
        ts_hexrotcomm: ${ts_hexrotcomm}
        ts_tcpip: ${ts_tcpip}

  bare-centos-community:
    image: lsstts/centos7:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./develop-env/bare-centos/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base CentOS 7 image for cycle ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build_el7}
        ts_xml: ${ts_xml}
        ts_sal: ${ts_sal}

  conda-builder-aarch64-community:
    image: lsstts/conda_package_builder_aarch64:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./conda_builder/aarch64/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base CentOS 7 aarch64 image for cycle ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}

  conda-builder-community:
    image: lsstts/conda_package_builder:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./conda_builder/linux64/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base CentOS 7 linux64 image for cycle ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build}

  conda-builder-private:
    image: ${hub}/conda_package_builder:${CYCLE}
    build:
      context: ../build/
      dockerfile: ./conda_builder/linux64/Dockerfile
      labels:
        com.description: "LSST Telescope and Site base CentOS 7 linux64 image for cycle ${CYCLE}."
      args:
        dds_community_version: ${dds_community_version}
        dds_community_build: ${dds_community_build}
        dds_private_version: ${dds_private_version}
        dds_private_build: ${dds_private_build}

  ospl-daemon:
    image: ${hub}/ospl-daemon:${CYCLE}
    <<: *base-ospl-daemon

  ospl-daemon_c:
    image: ${hub}/ospl-daemon:${CYCLE}
    <<: *base-ospl-daemon

  lsst_sims:
    image: ${hub}/lsst_sims:${CYCLE}${rev}
    <<: *base-lsst_sims

  lsst_sims_c:
    image: ${hub}/lsst_sims:${CYCLE}
    <<: *base-lsst_sims

  adam-sensors:
    image: ${hub}/adam-sensors:${CYCLE}${rev}
    <<: *base-adam-sensors

  adam-sensors_c:
    image: ${hub}/adam-sensors:${CYCLE}
    <<: *base-adam-sensors

  dimm:
    image: ${hub}/dimm:${CYCLE}${rev}
    <<: *base-dimm

  dimm_c:
    image: ${hub}/dimm:${CYCLE}
    <<: *base-dimm

  dsm:
    image: ${hub}/dsm:${CYCLE}${rev}
    <<: *base-dsm

  dsm_c:
    image: ${hub}/dsm:${CYCLE}
    <<: *base-dsm

  love-commander:
    image: ${hub}/love-commander:${CYCLE}${rev}
    <<: *base-love-commander

  love-commander_c:
    image: ${hub}/love-commander:${CYCLE}
    <<: *base-love-commander

  love-frontend:
    image: ${hub}/love-frontend:${CYCLE}${rev}
    <<: *base-love-frontend

  love-frontend_c:
    image: ${hub}/love-frontend:${CYCLE}
    <<: *base-love-frontend

  love-manager:
    image: ${hub}/love-manager:${CYCLE}${rev}
    <<: *base-love-manager

  love-manager_c:
    image: ${hub}/love-manager:${CYCLE}
    <<: *base-love-manager

  love-manager-static:
    image: ${hub}/love-manager-static:${CYCLE}${rev}
    <<: *base-love-manager-static

  love-manager-static_c:
    image: ${hub}/love-manager-static:${CYCLE}
    <<: *base-love-manager-static

  love-producer:
    image: ${hub}/love-producer:${CYCLE}${rev}
    <<: *base-love-producer

  love-producer_c:
    image: ${hub}/love-producer:${CYCLE}
    <<: *base-love-producer

  love-csc:
    image: ${hub}/love-csc:${CYCLE}${rev}
    <<: *base-love-csc

  love-csc_c:
    image: ${hub}/love-csc:${CYCLE}
    <<: *base-love-csc

  mtaos:
    image: ${hub}/mtaos:${CYCLE}${rev}
    <<: *base-mtaos

  mtaos_c:
    image: ${hub}/mtaos:${CYCLE}
    <<: *base-mtaos

  mtdome:
    image: ${hub}/mtdome:${CYCLE}${rev}
    <<: *base-mtdome

  mtdome_c:
    image: ${hub}/mtdome:${CYCLE}
    <<: *base-mtdome

  mtdometrajectory:
    image: ${hub}/mtdometrajectory:${CYCLE}${rev}
    <<: *base-mtdometrajectory

  mtdometrajectory_c:
    image: ${hub}/mtdometrajectory:${CYCLE}
    <<: *base-mtdometrajectory

  mthexapod:
    image: ${hub}/mthexapod:${CYCLE}${rev}
    <<: *base-mthexapod

  mthexapod_c:
    image: ${hub}/mthexapod:${CYCLE}
    <<: *base-mthexapod

  mtm1m3_sim:
    image: ${hub}/mtm1m3_sim:${CYCLE}${rev}
    <<: *base-mtm1m3_sim

  mtm1m3_sim_c:
    image: ${hub}/mtm1m3_sim:${CYCLE}
    <<: *base-mtm1m3_sim

  mtm2_sim:
    image: ${hub}/m2:${CYCLE}${rev}
    <<: *base-mtm2_sim

  mtm2_sim_c:
    image: ${hub}/m2:${CYCLE}
    <<: *base-mtm2_sim

  mtmount:
    image: ${hub}/mtmount:${CYCLE}${rev}
    <<: *base-mtmount

  mtmount_c:
    image: ${hub}/mtmount:${CYCLE}
    <<: *base-mtmount

  mtrotator:
    image: ${hub}/mtrotator:${CYCLE}${rev}
    <<: *base-mtrotator

  mtrotator_c:
    image: ${hub}/mtrotator:${CYCLE}
    <<: *base-mtrotator

  rubintv-broadcaster:
    image: ${hub}/rubintv-broadcaster:${CYCLE}${rev}
    <<: *base-rubintv-broadcaster

  rubintv-broadcaster_c:
    image: ${hub}/rubintv-broadcaster:${CYCLE}
    <<: *base-rubintv-broadcaster

  ptg:
    image: ts-dockerhub.lsst.org/ptkernel:${CYCLE}${rev}
    <<: *base-ptg

  ptg_c:
    image: ts-dockerhub.lsst.org/ptkernel:${CYCLE}
    <<: *base-ptg

  salkafka:
    image: ${hub}/salkafka:${CYCLE}${rev}
    <<: *base-salkafka

  salkafka_c:
    image: ${hub}/salkafka:${CYCLE}
    <<: *base-salkafka

  scheduler:
    image: ${hub}/scheduler:${CYCLE}${rev}
    <<: *base-scheduler

  scheduler_c:
    image: ${hub}/scheduler:${CYCLE}
    <<: *base-scheduler

  scriptqueue:
    image: ${hub}/scriptqueue:${CYCLE}${rev}
    <<: *base-scriptqueue

  scriptqueue_c:
    image: ${hub}/scriptqueue:${CYCLE}
    <<: *base-scriptqueue

  test:
    image: ${hub}/test:${CYCLE}${rev}
    <<: *base-test

  test_c:
    image: ${hub}/test:${CYCLE}
    <<: *base-test

  watcher:
    image: ${hub}/watcher:${CYCLE}${rev}
    <<: *base-watcher

  watcher_c:
    image: ${hub}/watcher:${CYCLE}
    <<: *base-watcher

  weatherstation:
    image: ${hub}/weatherstation:${CYCLE}${rev}
    <<: *base-weatherstation

  weatherstation_c:
    image: ${hub}/weatherstation:${CYCLE}
    <<: *base-weatherstation

  atmcs_sim:
    image: ${hub}/atmcs_sim:${CYCLE}${rev}
    <<: *base-atmcs_sim

  atmcs_sim_c:
    image: ${hub}/atmcs_sim:${CYCLE}
    <<: *base-atmcs_sim

  atdome:
    image: ${hub}/atdome:${CYCLE}${rev}
    <<: *base-atdome

  atdome_c:
    image: ${hub}/atdome:${CYCLE}
    <<: *base-atdome

  atdometrajectory:
    image: ${hub}/atdometrajectory:${CYCLE}${rev}
    <<: *base-atdometrajectory

  atdometrajectory_c:
    image: ${hub}/atdometrajectory:${CYCLE}
    <<: *base-atdometrajectory

  atpneumatics_sim:
    image: ${hub}/at_pneumatics_sim:${CYCLE}${rev}
    <<: *base-atpneumatics_sim

  atpneumatics_sim_c:
    image: ${hub}/at_pneumatics_sim:${CYCLE}
    <<: *base-atpneumatics_sim

  ataos:
    image: ${hub}/ataos:${CYCLE}${rev}
    <<: *base-ataos

  ataos_c:
    image: ${hub}/ataos:${CYCLE}
    <<: *base-ataos

  athexapod:
    image: ${hub}/athexapod:${CYCLE}${rev}
    <<: *base-athexapod

  athexapod_c:
    image: ${hub}/athexapod:${CYCLE}
    <<: *base-athexapod

  atspectrograph:
    image: ${hub}/atspec:${CYCLE}${rev}
    <<: *base-atspectrograph

  atspectrograph_c:
    image: ${hub}/atspec:${CYCLE}
    <<: *base-atspectrograph

  dmocps:
    image: ${hub}/dmocps:${CYCLE}${rev}
    <<: *base-dmocps

  dmocps_c:
    image: ${hub}/dmocps:${CYCLE}
    <<: *base-dmocps

  genericcamera:
    image: ${hub}/genericcamera:${CYCLE}${rev}
    <<: *base-genericcamera

  genericcamera_c:
    image: ${hub}/genericcamera:${CYCLE}
    <<: *base-genericcamera

  pmd:
    image: ${hub}/pmd:${CYCLE}${rev}
    <<: *base-pmd

  pmd_c:
    image: ${hub}/pmd:${CYCLE}
    <<: *base-pmd

  ess:
    image: ${hub}/ess:${CYCLE}${rev}
    <<: *base-ess

  ess_c:
    image: ${hub}/ess:${CYCLE}
    <<: *base-ess

  hvac:
    image: ${hub}/hvac:${CYCLE}${rev}
    <<: *base-hvac

  hvac_c:
    image: ${hub}/hvac:${CYCLE}
    <<: *base-hvac

