pipeline {
    agent {
        label 'Node2_8CPU'
    }
    environment {
        registryCredential = "dockerhub-lssttsadmin"
    }
    parameters {
        booleanParam defaultValue: false, description: 'Build cycle image?', name: 'build_cycle'
        booleanParam defaultValue: false, description: 'Trigger the SalObjContainer build?', name: 'BuildSalobjContainer'
        booleanParam defaultValue: false, description: 'Trigger the DevelopEnvironment build?', name: 'BuildDevEnv'
    }
    stages {
        stage("Build cycle") {
            when {
                expression { return params.build_cycle }
            }
            steps {
              withCredentials([file(credentialsId: 'yum-nexus-private', variable: 'yum_nexus_private')]) {
                sh "cp \$yum_nexus_private ${env.WORKSPACE}/build/common/ && chmod u+rw -R ${env.WORKSPACE}"
              }

              withEnv(["HOME=${env.WORKSPACE}"]) {
                sh """
                  docker compose --env-file cycle/cycle.env -f cycle/docker-compose.yaml build --pull base-sqre
                """
              }
            }
        }
        stage("Push cycle docker image") {
            when {
                expression { return params.build_cycle }
            }
            steps {
              script {
                docker.withRegistry("", registryCredential) {
                  sh """
                    source cycle/cycle.env
                    docker push lsstts/base-sqre:\${CYCLE}
                    docker push lsstts/base-sqre:\${CYCLE}\${rev}
                  """
                }
              }
              script {
                docker.withRegistry("https://ts-dockerhub.lsst.org/", "nexus3-lsst_jenkins") {
                  sh """
                    source cycle/cycle.env
                    docker push ts-dockerhub.lsst.org/base-sqre:\${CYCLE}
                    docker push ts-dockerhub.lsst.org/base-sqre:\${CYCLE}\${rev}
                  """
                }
              }
            }
        }

        stage("Build Docker image") {
            steps {

              withCredentials([file(credentialsId: 'yum-nexus-private', variable: 'yum_nexus_private')]) {
                sh "cp \$yum_nexus_private ${env.WORKSPACE}/build/common/ && chmod u+rw -R ${env.WORKSPACE}"
              }

              withEnv(["HOME=${env.WORKSPACE}"]) {
                sh """
                  docker compose --env-file cycle/develop.env -f cycle/docker-compose.yaml build --pull base-sqre
                  docker compose --env-file cycle/main.env -f cycle/docker-compose.yaml build --pull base-sqre
                """
              }
            }
        }
        stage("Push Docker image") {
            steps {
              script {
                docker.withRegistry("", registryCredential) {
                  sh """
                    source cycle/develop.env 
                    docker push lsstts/base-sqre:\${CYCLE}
                    source cycle/main.env
                    docker push lsstts/base-sqre:\${CYCLE}
                  """
                }
              }
              script {
                docker.withRegistry("https://ts-dockerhub.lsst.org/", "nexus3-lsst_jenkins") {
                  sh """
                    source cycle/develop.env
                    docker push ts-dockerhub.lsst.org/base-sqre:\${CYCLE}
                    source cycle/main.env
                    docker push ts-dockerhub.lsst.org/base-sqre:\${CYCLE}
                  """
                }
              }
            }
        }
        stage("Trigger the SalObjContainer job") {
            when {
                expression {
                    return params.BuildSalobjContainer
                }
            }
            steps {
                // Start the SalObjContainer, Develop build.
                build job: 'SalObjContainer', parameters: [booleanParam(name: 'BuildDevEnv_develop', value: true),
                    booleanParam(name: 'build_develop', value: true),
                    booleanParam(name: 'push_tag', value: false)], wait: false
                // Start the SalObjContainer, main build.
                build job: 'SalObjContainer', parameters: [booleanParam(name: 'BuildDevEnv_main', value: true),
                    booleanParam(name: 'build_main', value: true),
                    booleanParam(name: 'push_tag', value: false)], wait: false
            }
        }
        stage("Trigger the SalObjContainer/cycle job") {
            when {
                expression {
                    return params.BuildSalobjContainer
                }
            }
            steps {
                // Start the SalObjContainer, cycle build.
                build job: 'SalObjContainer', parameters: [booleanParam(name: 'BuildDevEnv_cycle', value: true),
                    booleanParam(name: 'build_cycle', value: true)], wait: false
            }
        }
    }
    post {
        always {
            step([$class: 'Mailer',
                notifyEveryUnstableBuild: false,
                recipients: "tribeiro@lsst.org",
                sendToIndividuals: true])
        }
    }
}
